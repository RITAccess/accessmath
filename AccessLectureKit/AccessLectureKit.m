//
//  AccessLectureKit.m
//  AccessLecture
//
//  Created by Michael on 2/13/15.
//  Copyright (c) 2015 RIT . All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "AccessLectureKit.h"


@implementation AccessLectureKit

#pragma mark Cache

static UIColor* _accessBlue = nil;
static UIColor* _brushDefault = nil;

#pragma mark Initialization

+ (void)initialize
{
    // Colors Initialization
    _accessBlue = [UIColor colorWithRed: 0.364 green: 0.466 blue: 0.562 alpha: 1];
    _brushDefault = [UIColor colorWithRed: 1 green: 0.624 blue: 0 alpha: 1];

}

#pragma mark Colors

+ (UIColor*)accessBlue { return _accessBlue; }
+ (UIColor*)brushDefault { return _brushDefault; }

#pragma mark Drawing Methods

+ (void)drawBackButtonWithFrame: (CGRect)frame
{
    //// Color Declarations
    UIColor* color0 = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 1];


    //// Subframes
    CGRect left = CGRectMake(CGRectGetMinX(frame) + 18.26, CGRectGetMinY(frame) + 8, CGRectGetWidth(frame) - 37, CGRectGetHeight(frame) - 16);


    //// Captions
    {
    }


    //// Plus
    {
    }


    //// Minus
    {
    }


    //// Right
    {
    }


    //// Left
    {
        //// Oval 2 Drawing
        UIBezierPath* oval2Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(CGRectGetMinX(left) + floor(CGRectGetWidth(left) * 0.00000 + 0.5), CGRectGetMinY(left) + floor(CGRectGetHeight(left) * 0.00000 + 0.5), floor(CGRectGetWidth(left) * 1.00000 + 0.5) - floor(CGRectGetWidth(left) * 0.00000 + 0.5), floor(CGRectGetHeight(left) * 1.00000 + 0.5) - floor(CGRectGetHeight(left) * 0.00000 + 0.5))];
        [color0 setStroke];
        oval2Path.lineWidth = 6;
        [oval2Path stroke];


        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
        [bezier2Path moveToPoint: CGPointMake(CGRectGetMinX(left) + 0.80851 * CGRectGetWidth(left), CGRectGetMinY(left) + 0.53191 * CGRectGetHeight(left))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(left) + 0.30851 * CGRectGetWidth(left), CGRectGetMinY(left) + 0.53191 * CGRectGetHeight(left))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(left) + 0.45745 * CGRectGetWidth(left), CGRectGetMinY(left) + 0.68085 * CGRectGetHeight(left))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(left) + 0.37234 * CGRectGetWidth(left), CGRectGetMinY(left) + 0.68085 * CGRectGetHeight(left))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(left) + 0.19149 * CGRectGetWidth(left), CGRectGetMinY(left) + 0.50000 * CGRectGetHeight(left))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(left) + 0.37234 * CGRectGetWidth(left), CGRectGetMinY(left) + 0.31915 * CGRectGetHeight(left))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(left) + 0.45745 * CGRectGetWidth(left), CGRectGetMinY(left) + 0.31915 * CGRectGetHeight(left))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(left) + 0.30851 * CGRectGetWidth(left), CGRectGetMinY(left) + 0.46809 * CGRectGetHeight(left))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(left) + 0.80851 * CGRectGetWidth(left), CGRectGetMinY(left) + 0.46809 * CGRectGetHeight(left))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(left) + 0.80851 * CGRectGetWidth(left), CGRectGetMinY(left) + 0.53191 * CGRectGetHeight(left))];
        [bezier2Path closePath];
        bezier2Path.miterLimit = 4;

        [UIColor.redColor setStroke];
        bezier2Path.lineWidth = 5.5;
        [bezier2Path stroke];
    }


    //// Up
    {
    }


    //// Down
    {
    }


    //// Play
    {
    }


    //// Forward
    {
    }


    //// Reverse
    {
    }


    //// Stop
    {
    }


    //// Pause_1_
    {
    }


    //// Record
    {
    }


    //// Close
    {
    }


    //// Check
    {
    }


    //// Power
    {
    }


    //// Skip_Forward
    {
    }


    //// Skip_Backward
    {
    }


    //// Cancel
    {
    }


    //// Info
    {
    }


    //// Help
    {
    }
}

+ (void)drawCreateButtonWithFrame: (CGRect)frame
{
    //// Color Declarations
    UIColor* color0 = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 1];
    UIColor* color2 = [UIColor colorWithRed: 0.12 green: 0.562 blue: 0.192 alpha: 1];


    //// Subframes
    CGRect your_Icon = CGRectMake(CGRectGetMinX(frame) + 19, CGRectGetMinY(frame) + 9.43, CGRectGetWidth(frame) - 37.9, CGRectGetHeight(frame) - 19);


    //// Captions
    {
    }


    //// Your_Icon
    {
        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
        [bezier2Path moveToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.00000 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 1.00000 * CGRectGetHeight(your_Icon))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 1.00000 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 1.00000 * CGRectGetHeight(your_Icon))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 1.00000 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.00123 * CGRectGetHeight(your_Icon))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.59197 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.00123 * CGRectGetHeight(your_Icon))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.59197 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.08889 * CGRectGetHeight(your_Icon))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.91351 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.08889 * CGRectGetHeight(your_Icon))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.91351 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.91233 * CGRectGetHeight(your_Icon))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.08649 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.91233 * CGRectGetHeight(your_Icon))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.08649 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.60001 * CGRectGetHeight(your_Icon))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.00000 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.60001 * CGRectGetHeight(your_Icon))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.00000 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 1.00000 * CGRectGetHeight(your_Icon))];
        [bezier2Path closePath];
        bezier2Path.miterLimit = 4;

        [color0 setFill];
        [bezier2Path fill];


        //// Bezier 4 Drawing
        UIBezierPath* bezier4Path = UIBezierPath.bezierPath;
        [bezier4Path moveToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.85261 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.35590 * CGRectGetHeight(your_Icon))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.49937 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.35590 * CGRectGetHeight(your_Icon))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.49937 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.00000 * CGRectGetHeight(your_Icon))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.35322 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.00000 * CGRectGetHeight(your_Icon))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.35322 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.35590 * CGRectGetHeight(your_Icon))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.00002 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.35590 * CGRectGetHeight(your_Icon))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.00002 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.50297 * CGRectGetHeight(your_Icon))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.35322 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.50297 * CGRectGetHeight(your_Icon))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.35322 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.85889 * CGRectGetHeight(your_Icon))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.49937 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.85889 * CGRectGetHeight(your_Icon))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.49937 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.50297 * CGRectGetHeight(your_Icon))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.85261 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.50297 * CGRectGetHeight(your_Icon))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.85261 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.35590 * CGRectGetHeight(your_Icon))];
        [bezier4Path closePath];
        bezier4Path.miterLimit = 4;

        [color2 setFill];
        [bezier4Path fill];
    }
}

+ (void)drawSearchButtonWithFrame: (CGRect)frame
{
    //// General Declarations
    CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Color Declarations
    UIColor* color = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 1];
    UIColor* gradientColor = [UIColor colorWithRed: 0.62 green: 0.455 blue: 0.251 alpha: 1];

    //// Gradient Declarations
    CGFloat gradientLocations[] = {0, 0.14, 0.39, 0.39, 0.41};
    CGGradientRef gradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)gradientColor.CGColor, (id)gradientColor.CGColor, (id)gradientColor.CGColor, (id)[gradientColor blendedColorWithFraction: 0.5 ofColor: color].CGColor, (id)color.CGColor], gradientLocations);


    //// Subframes
    CGRect group = CGRectMake(CGRectGetMinX(frame) + 19, CGRectGetMinY(frame) + 8, CGRectGetWidth(frame) - 37, CGRectGetHeight(frame) - 19);


    //// Group
    {
        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
        [bezier2Path moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.00664 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.89223 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.31948 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.57884 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.25703 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.37213 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.27885 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.51816 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.25703 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.44682 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.36583 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.10899 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.25703 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.27273 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.29566 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.17928 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.62851 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00000 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.43600 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.03871 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.52928 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00000 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.89120 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.10899 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.72774 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00000 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.82103 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.03871 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 1.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.37213 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.96136 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.17928 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 1.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.27273 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.89119 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.63525 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 1.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.47152 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.96136 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.56496 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.62850 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.74425 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.82102 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.70554 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.72774 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.74425 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.42012 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.68029 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.55309 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.74425 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.48113 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.72187 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.10758 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.99336 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.06426 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.98824 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.09703 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00393 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.07763 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00163 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.01174 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.93563 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.00664 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.89223 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + -0.00163 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92223 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + -0.00392 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.90280 * CGRectGetHeight(group))];
        [bezier2Path closePath];
        [bezier2Path moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.62851 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.64344 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.89937 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.37213 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.77787 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.64344 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.89937 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.52173 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.62851 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.10080 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.89937 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.22252 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.77786 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.10080 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.35766 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.37213 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.47916 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.10080 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.35766 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.22252 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.62851 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.64344 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.35766 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.52173 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.47916 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.64344 * CGRectGetHeight(group))];
        [bezier2Path closePath];
        bezier2Path.miterLimit = 4;

        CGContextSaveGState(context);
        [bezier2Path addClip];
        UIBezierPath* bezier2RotatedPath = [bezier2Path copy];
        CGAffineTransform bezier2Transform = CGAffineTransformMakeRotation(-45*(-M_PI/180));
        [bezier2RotatedPath applyTransform: bezier2Transform];
        CGRect bezier2Bounds = CGPathGetPathBoundingBox(bezier2RotatedPath.CGPath);
        bezier2Transform = CGAffineTransformInvert(bezier2Transform);

        CGContextDrawLinearGradient(context, gradient,
            CGPointApplyAffineTransform(CGPointMake(CGRectGetMinX(bezier2Bounds), CGRectGetMidY(bezier2Bounds)), bezier2Transform),
            CGPointApplyAffineTransform(CGPointMake(CGRectGetMaxX(bezier2Bounds), CGRectGetMidY(bezier2Bounds)), bezier2Transform),
            0);
        CGContextRestoreGState(context);
    }


    //// Cleanup
    CGGradientRelease(gradient);
    CGColorSpaceRelease(colorSpace);
}

+ (void)drawBrushButtonWithFrame: (CGRect)frame brushColor: (UIColor*)brushColor
{
    //// Color Declarations
    UIColor* color3 = [UIColor colorWithRed: 0.005 green: 0.005 blue: 0.005 alpha: 1];


    //// Subframes
    CGRect group = CGRectMake(CGRectGetMinX(frame) + 11.81, CGRectGetMinY(frame) + 8.1, CGRectGetWidth(frame) - 22.63, CGRectGetHeight(frame) - 17.71);


    //// Group
    {
        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
        [bezier2Path moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.46151 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.85098 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.41697 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.63696 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.49981 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.77756 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.47977 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.68175 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.23383 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.68860 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.35405 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.59208 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.27213 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.61518 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.23370 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.68885 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.83739 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.18246 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.78705 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.09199 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.84001 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.00024 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.83810 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.09522 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.95426 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.02188 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.88433 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.05387 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92477 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.46151 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.85098 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.22096 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.04394 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.38496 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.99770 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.46151 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.85098 * CGRectGetHeight(group))];
        [bezier2Path closePath];
        bezier2Path.miterLimit = 4;

        [brushColor setFill];
        [bezier2Path fill];


        //// Bezier 4 Drawing
        UIBezierPath* bezier4Path = UIBezierPath.bezierPath;
        [bezier4Path moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.97636 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.02435 * CGRectGetHeight(group))];
        [bezier4Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.84030 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06424 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.93246 * CGRectGetWidth(group), CGRectGetMinY(group) + -0.02768 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.88420 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.01220 * CGRectGetHeight(group))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.41538 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.56794 * CGRectGetHeight(group))];
        [bezier4Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.52860 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.68996 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.49286 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.59252 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.50797 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.59799 * CGRectGetHeight(group))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.95352 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.18614 * CGRectGetHeight(group))];
        [bezier4Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.97636 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.02435 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.99742 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.13409 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 1.02026 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.07639 * CGRectGetHeight(group))];
        [bezier4Path closePath];
        bezier4Path.miterLimit = 4;

        [color3 setFill];
        [bezier4Path fill];
    }
}

+ (void)drawSaveButtonWithFrame: (CGRect)frame
{
    //// Color Declarations
    UIColor* color4 = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 1];
    UIColor* color5 = [UIColor colorWithRed: 0.205 green: 0.294 blue: 0.67 alpha: 1];


    //// Subframes
    CGRect group = CGRectMake(CGRectGetMinX(frame) + 19, CGRectGetMinY(frame) + 9.23, CGRectGetWidth(frame) - 37.3, CGRectGetHeight(frame) - 18.23);


    //// Group
    {
        //// Guts Drawing
        UIBezierPath* gutsPath = UIBezierPath.bezierPath;
        [gutsPath moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.96678 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.20201 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.78601 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.01877 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.76922 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.01223 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.78213 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.01485 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.77568 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.01223 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.69949 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.01223 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.29792 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.01223 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.08745 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.01223 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.02418 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.07636 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.05259 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.01223 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.02418 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.04102 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.02418 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.91141 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.08745 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.97554 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.02418 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.94675 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.05259 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.97554 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.22174 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.97554 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.79504 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.97554 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.91255 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.97554 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.97582 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.91141 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.94741 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.97554 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.97582 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.94675 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.97582 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.21903 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.96678 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.20201 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.97452 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.21379 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.97194 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.20725 * CGRectGetHeight(group))];
        [gutsPath closePath];
        [gutsPath moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.66416 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.66416 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.26308 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.59702 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.26439 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.66416 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.26439 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.59702 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.26439 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.59702 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.66416 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [gutsPath closePath];
        [gutsPath moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.53586 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.53586 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.26439 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.33584 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.26439 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.33455 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.26308 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.33455 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.26439 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.33455 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.26308 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.33455 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.53586 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [gutsPath closePath];
        [gutsPath moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.25708 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.25708 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.62739 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.34570 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.53753 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.25708 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.57111 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.29018 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.53753 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.66980 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.53753 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.75842 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.62739 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.72532 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.53753 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.75842 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.57111 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.75842 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.25708 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group))];
        [gutsPath closePath];
        [gutsPath moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.92675 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.91141 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.91125 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.92675 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.91926 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.92029 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.81829 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.81829 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.62739 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.66980 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.47687 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.81829 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.54493 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.75114 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.47687 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.34699 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.47687 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.19850 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.62739 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.26564 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.47687 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.19850 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.54493 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.19850 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.08745 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.07196 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.91141 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.07971 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.07196 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92057 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.07196 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.07636 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.08745 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.07196 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06851 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.07842 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.27468 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.27468 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.26308 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.33584 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.32504 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.27468 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.29056 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.30872 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.32504 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.66287 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.32504 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.72403 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.26308 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.68998 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.32504 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.72403 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.29056 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.72403 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.76018 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.92675 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.22950 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.92675 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.91141 * CGRectGetHeight(group))];
        [gutsPath closePath];
        [gutsPath moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.68142 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.78445 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.65817 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.82024 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.68142 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.79754 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.67109 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.82024 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.36248 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.82024 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.33924 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.78445 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.34957 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.82024 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.33924 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.79754 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.36248 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.74866 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.33924 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.77136 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.34957 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.74866 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.65688 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.74866 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.68142 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.78445 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.67109 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.74866 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.68142 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.77136 * CGRectGetHeight(group))];
        [gutsPath closePath];
        [gutsPath moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.68142 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.65880 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.65817 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.69459 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.68142 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.67189 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.67109 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.69459 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.36248 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.69459 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.33924 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.65880 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.34957 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.69459 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.33924 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.67189 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.36248 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.62301 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.33924 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.64571 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.34957 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.62301 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.65688 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.62301 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.68142 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.65880 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.67109 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.62170 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.68142 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.64440 * CGRectGetHeight(group))];
        [gutsPath closePath];
        gutsPath.miterLimit = 4;

        [color5 setFill];
        [gutsPath fill];


        //// Outline Drawing
        UIBezierPath* outlinePath = UIBezierPath.bezierPath;
        [outlinePath moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.99096 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.20201 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.78601 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00654 * CGRectGetHeight(group))];
        [outlinePath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.76922 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00000 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.78213 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00262 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.77568 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00000 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.69949 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00000 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.29792 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00000 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.08745 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00000 * CGRectGetHeight(group))];
        [outlinePath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.07636 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.05259 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00000 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.04102 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.91141 * CGRectGetHeight(group))];
        [outlinePath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.08745 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.94675 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.05259 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.22174 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.79504 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.91255 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group))];
        [outlinePath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 1.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.91141 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.94741 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 1.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.94675 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 1.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.21903 * CGRectGetHeight(group))];
        [outlinePath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.99096 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.20201 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.99871 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.21379 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.99613 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.20725 * CGRectGetHeight(group))];
        [outlinePath closePath];
        [outlinePath moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.67625 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.60911 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.67625 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [outlinePath closePath];
        [outlinePath moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.56004 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.32246 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.56004 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [outlinePath closePath];
        [outlinePath moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.24498 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.77051 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.24498 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group))];
        [outlinePath closePath];
        [outlinePath moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.92675 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.91141 * CGRectGetHeight(group))];
        [outlinePath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.91125 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.92675 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.91926 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.92029 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.81829 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.19850 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.08745 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group))];
        [outlinePath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.07196 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.91141 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.07971 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.07196 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92057 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.07196 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.07636 * CGRectGetHeight(group))];
        [outlinePath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.08745 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.07196 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06851 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.07842 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.27468 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.72403 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.76018 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.92675 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.22950 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.92675 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.91141 * CGRectGetHeight(group))];
        [outlinePath closePath];
        outlinePath.miterLimit = 4;

        [color4 setFill];
        [outlinePath fill];
    }
}

+ (void)drawCheckButtonWithFrame: (CGRect)frame
{
    //// Color Declarations
    UIColor* color0 = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 1];
    UIColor* color2 = [UIColor colorWithRed: 0.12 green: 0.562 blue: 0.192 alpha: 1];


    //// Subframes
    CGRect group = CGRectMake(CGRectGetMinX(frame) + 18.26, CGRectGetMinY(frame) + 8, CGRectGetWidth(frame) - 28.26, CGRectGetHeight(frame) - 16);


    //// Left
    {
        //// Group
        {
            //// Oval 2 Drawing
            UIBezierPath* oval2Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(CGRectGetMinX(group) + floor(CGRectGetWidth(group) * 0.00000 + 0.5), CGRectGetMinY(group) + floor(CGRectGetHeight(group) * 0.00000 + 0.5), floor(CGRectGetWidth(group) * 0.90471 + 0.5) - floor(CGRectGetWidth(group) * 0.00000 + 0.5), floor(CGRectGetHeight(group) * 1.00000 + 0.5) - floor(CGRectGetHeight(group) * 0.00000 + 0.5))];
            [color0 setStroke];
            oval2Path.lineWidth = 6;
            [oval2Path stroke];


            //// Bezier 2 Drawing
            UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
            [bezier2Path moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.91435 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00000 * CGRectGetHeight(group))];
            [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.87417 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.04988 * CGRectGetHeight(group))];
            [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.39725 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.63834 * CGRectGetHeight(group))];
            [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.21952 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.43614 * CGRectGetHeight(group))];
            [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.17750 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.38839 * CGRectGetHeight(group))];
            [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.09529 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.48602 * CGRectGetHeight(group))];
            [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.13731 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.53377 * CGRectGetHeight(group))];
            [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.35775 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.78478 * CGRectGetHeight(group))];
            [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.40046 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.83333 * CGRectGetHeight(group))];
            [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.44156 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.78265 * CGRectGetHeight(group))];
            [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.95959 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.14325 * CGRectGetHeight(group))];
            [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 1.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.09363 * CGRectGetHeight(group))];
            [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.91435 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00000 * CGRectGetHeight(group))];
            [bezier2Path closePath];
            bezier2Path.miterLimit = 4;

            [color2 setFill];
            [bezier2Path fill];
        }
    }
}

+ (void)drawContButtonWithFrame: (CGRect)frame
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Color Declarations
    UIColor* color0 = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 1];
    UIColor* color2 = [UIColor colorWithRed: 0.12 green: 0.562 blue: 0.192 alpha: 1];

    //// Left
    {
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, CGRectGetMinX(frame) + 101.26, CGRectGetMinY(frame) + 92);
        CGContextRotateCTM(context, -180 * M_PI / 180);



        //// Oval 2 Drawing
        UIBezierPath* oval2Path = UIBezierPath.bezierPath;
        [oval2Path moveToPoint: CGPointMake(70.84, 71.7)];
        [oval2Path addCurveToPoint: CGPointMake(70.84, 12.3) controlPoint1: CGPointMake(87.05, 55.3) controlPoint2: CGPointMake(87.05, 28.7)];
        [oval2Path addCurveToPoint: CGPointMake(12.16, 12.3) controlPoint1: CGPointMake(54.64, -4.1) controlPoint2: CGPointMake(28.36, -4.1)];
        [oval2Path addCurveToPoint: CGPointMake(12.16, 71.7) controlPoint1: CGPointMake(-4.05, 28.7) controlPoint2: CGPointMake(-4.05, 55.3)];
        [oval2Path addCurveToPoint: CGPointMake(70.84, 71.7) controlPoint1: CGPointMake(28.36, 88.1) controlPoint2: CGPointMake(54.64, 88.1)];
        [oval2Path closePath];
        [color0 setStroke];
        oval2Path.lineWidth = 6;
        [oval2Path stroke];


        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
        [bezier2Path moveToPoint: CGPointMake(67.11, 44.68)];
        [bezier2Path addLineToPoint: CGPointMake(25.61, 44.68)];
        [bezier2Path addLineToPoint: CGPointMake(37.97, 57.19)];
        [bezier2Path addLineToPoint: CGPointMake(30.9, 57.19)];
        [bezier2Path addLineToPoint: CGPointMake(15.89, 42)];
        [bezier2Path addLineToPoint: CGPointMake(30.9, 26.81)];
        [bezier2Path addLineToPoint: CGPointMake(37.97, 26.81)];
        [bezier2Path addLineToPoint: CGPointMake(25.61, 39.32)];
        [bezier2Path addLineToPoint: CGPointMake(67.11, 39.32)];
        [bezier2Path addLineToPoint: CGPointMake(67.11, 44.68)];
        [bezier2Path closePath];
        bezier2Path.miterLimit = 4;

        [color2 setStroke];
        bezier2Path.lineWidth = 5.5;
        [bezier2Path stroke];



        CGContextRestoreGState(context);
    }
}

+ (void)drawTextInputWithFrame: (CGRect)frame
{

    //// Rectangle Drawing
    UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRoundedRect: CGRectMake(CGRectGetMinX(frame) + 1, CGRectGetMinY(frame) + 1, CGRectGetWidth(frame) - 2, CGRectGetHeight(frame) - 2) cornerRadius: 10];
    [AccessLectureKit.accessBlue setStroke];
    rectanglePath.lineWidth = 4;
    [rectanglePath stroke];
}

+ (void)drawLectureNoInfoWithFrame: (CGRect)frame
{


    //// Subframes
    CGRect group = CGRectMake(CGRectGetMinX(frame) + 11.53, CGRectGetMinY(frame) + 21.45, CGRectGetWidth(frame) - 22.61, CGRectGetHeight(frame) - 97.83);


    //// Group
    {
        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
        [bezier2Path moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.41545 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.13672 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.41273 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.12677 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.41480 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.13332 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.41384 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.13002 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.24755 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.16149 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.23854 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.11602 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.38508 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.08521 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.36945 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.07036 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.38013 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.08012 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.37488 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.07517 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.21813 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.10216 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.23405 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.18250 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.41616 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.14420 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.41545 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.13672 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.41608 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.14174 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.41592 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.13924 * CGRectGetHeight(group))];
        [bezier2Path closePath];
        bezier2Path.miterLimit = 4;

        [UIColor.blackColor setFill];
        [bezier2Path fill];


        //// Bezier 4 Drawing
        UIBezierPath* bezier4Path = UIBezierPath.bezierPath;
        [bezier4Path moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.65868 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.08519 * CGRectGetHeight(group))];
        [bezier4Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.66616 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.10435 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.66143 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.09158 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.66396 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.09797 * CGRectGetHeight(group))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.76412 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.11964 * CGRectGetHeight(group))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.75735 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.16552 * CGRectGetHeight(group))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.67469 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.15260 * CGRectGetHeight(group))];
        [bezier4Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.67239 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.17027 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.67448 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.15855 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.67378 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.16444 * CGRectGetHeight(group))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.77185 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.18580 * CGRectGetHeight(group))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.78379 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.10472 * CGRectGetHeight(group))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.65868 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.08519 * CGRectGetHeight(group))];
        [bezier4Path closePath];
        bezier4Path.miterLimit = 4;

        [UIColor.blackColor setFill];
        [bezier4Path fill];


        //// Bezier 6 Drawing
        UIBezierPath* bezier6Path = UIBezierPath.bezierPath;
        [bezier6Path moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.10278 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.27027 * CGRectGetHeight(group))];
        [bezier6Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.34280 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.21981 * CGRectGetHeight(group))];
        [bezier6Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.34626 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.23726 * CGRectGetHeight(group))];
        [bezier6Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.10624 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.28772 * CGRectGetHeight(group))];
        [bezier6Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.10278 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.27027 * CGRectGetHeight(group))];
        [bezier6Path closePath];
        bezier6Path.miterLimit = 4;

        [UIColor.blackColor setFill];
        [bezier6Path fill];


        //// Bezier 8 Drawing
        UIBezierPath* bezier8Path = UIBezierPath.bezierPath;
        [bezier8Path moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.35344 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.27920 * CGRectGetHeight(group))];
        [bezier8Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.11449 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.32945 * CGRectGetHeight(group))];
        [bezier8Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.11795 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.34688 * CGRectGetHeight(group))];
        [bezier8Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.35506 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.29705 * CGRectGetHeight(group))];
        [bezier8Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.35344 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.27920 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.35393 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.29133 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.35343 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.28539 * CGRectGetHeight(group))];
        [bezier8Path closePath];
        bezier8Path.miterLimit = 4;

        [UIColor.blackColor setFill];
        [bezier8Path fill];


        //// Bezier 10 Drawing
        UIBezierPath* bezier10Path = UIBezierPath.bezierPath;
        [bezier10Path moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.57198 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.27530 * CGRectGetHeight(group))];
        [bezier10Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.56499 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.29222 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.56818 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.28107 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.56601 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.28669 * CGRectGetHeight(group))];
        [bezier10Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.88031 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.34146 * CGRectGetHeight(group))];
        [bezier10Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.88290 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.32385 * CGRectGetHeight(group))];
        [bezier10Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.57198 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.27530 * CGRectGetHeight(group))];
        [bezier10Path closePath];
        bezier10Path.miterLimit = 4;

        [UIColor.blackColor setFill];
        [bezier10Path fill];


        //// Bezier 12 Drawing
        UIBezierPath* bezier12Path = UIBezierPath.bezierPath;
        [bezier12Path moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.37426 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.33646 * CGRectGetHeight(group))];
        [bezier12Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.12622 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.38860 * CGRectGetHeight(group))];
        [bezier12Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.12968 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.40604 * CGRectGetHeight(group))];
        [bezier12Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.38935 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.35144 * CGRectGetHeight(group))];
        [bezier12Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.37426 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.33646 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.38375 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.34676 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.37868 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.34180 * CGRectGetHeight(group))];
        [bezier12Path closePath];
        bezier12Path.miterLimit = 4;

        [UIColor.blackColor setFill];
        [bezier12Path fill];


        //// Bezier 14 Drawing
        UIBezierPath* bezier14Path = UIBezierPath.bezierPath;
        [bezier14Path moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.57800 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.33731 * CGRectGetHeight(group))];
        [bezier14Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.59118 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.35737 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.58235 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.34419 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.58702 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.35086 * CGRectGetHeight(group))];
        [bezier14Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.87153 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.40114 * CGRectGetHeight(group))];
        [bezier14Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.87410 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.38356 * CGRectGetHeight(group))];
        [bezier14Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.57800 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.33731 * CGRectGetHeight(group))];
        [bezier14Path closePath];
        bezier14Path.miterLimit = 4;

        [UIColor.blackColor setFill];
        [bezier14Path fill];


        //// Bezier 16 Drawing
        UIBezierPath* bezier16Path = UIBezierPath.bezierPath;
        [bezier16Path moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.42925 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.38650 * CGRectGetHeight(group))];
        [bezier16Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.13794 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.44775 * CGRectGetHeight(group))];
        [bezier16Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.14139 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.46520 * CGRectGetHeight(group))];
        [bezier16Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.43958 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.40252 * CGRectGetHeight(group))];
        [bezier16Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.42925 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.38650 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.43692 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.39673 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.43341 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.39146 * CGRectGetHeight(group))];
        [bezier16Path closePath];
        bezier16Path.miterLimit = 4;

        [UIColor.blackColor setFill];
        [bezier16Path fill];


        //// Bezier 18 Drawing
        UIBezierPath* bezier18Path = UIBezierPath.bezierPath;
        [bezier18Path moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.60884 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.40318 * CGRectGetHeight(group))];
        [bezier18Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.60993 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.42137 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.60976 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.40924 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.61013 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.41528 * CGRectGetHeight(group))];
        [bezier18Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.86274 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.46084 * CGRectGetHeight(group))];
        [bezier18Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.86533 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.44324 * CGRectGetHeight(group))];
        [bezier18Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.60884 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.40318 * CGRectGetHeight(group))];
        [bezier18Path closePath];
        bezier18Path.miterLimit = 4;

        [UIColor.blackColor setFill];
        [bezier18Path fill];


        //// Bezier 20 Drawing
        UIBezierPath* bezier20Path = UIBezierPath.bezierPath;
        [bezier20Path moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.44289 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.44693 * CGRectGetHeight(group))];
        [bezier20Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.44319 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.44520 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.44302 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.44634 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.44307 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.44580 * CGRectGetHeight(group))];
        [bezier20Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.14967 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.50693 * CGRectGetHeight(group))];
        [bezier20Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.15312 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.52436 * CGRectGetHeight(group))];
        [bezier20Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.43756 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.46455 * CGRectGetHeight(group))];
        [bezier20Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.44289 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.44693 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.43974 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.45874 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.44158 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.45288 * CGRectGetHeight(group))];
        [bezier20Path closePath];
        bezier20Path.miterLimit = 4;

        [UIColor.blackColor setFill];
        [bezier20Path fill];


        //// Bezier 22 Drawing
        UIBezierPath* bezier22Path = UIBezierPath.bezierPath;
        [bezier22Path moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.60041 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.46295 * CGRectGetHeight(group))];
        [bezier22Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.59891 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.46679 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.59989 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.46424 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.59948 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.46550 * CGRectGetHeight(group))];
        [bezier22Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.59149 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.47955 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.59696 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.47117 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.59437 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.47541 * CGRectGetHeight(group))];
        [bezier22Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.85396 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.52052 * CGRectGetHeight(group))];
        [bezier22Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.85655 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.50294 * CGRectGetHeight(group))];
        [bezier22Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.60041 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.46295 * CGRectGetHeight(group))];
        [bezier22Path closePath];
        bezier22Path.miterLimit = 4;

        [UIColor.blackColor setFill];
        [bezier22Path fill];


        //// Bezier 24 Drawing
        UIBezierPath* bezier24Path = UIBezierPath.bezierPath;
        [bezier24Path moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.41327 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.51669 * CGRectGetHeight(group))];
        [bezier24Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.41513 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.51273 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.41386 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.51537 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.41450 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.51406 * CGRectGetHeight(group))];
        [bezier24Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.16140 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.56607 * CGRectGetHeight(group))];
        [bezier24Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.16485 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.58350 * CGRectGetHeight(group))];
        [bezier24Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.40710 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.53258 * CGRectGetHeight(group))];
        [bezier24Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.41327 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.51669 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.40902 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.52697 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.41108 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.52156 * CGRectGetHeight(group))];
        [bezier24Path closePath];
        bezier24Path.miterLimit = 4;

        [UIColor.blackColor setFill];
        [bezier24Path fill];


        //// Bezier 26 Drawing
        UIBezierPath* bezier26Path = UIBezierPath.bezierPath;
        [bezier26Path moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.55609 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.51708 * CGRectGetHeight(group))];
        [bezier26Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.53975 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.53254 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.55056 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.52221 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.54504 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.52732 * CGRectGetHeight(group))];
        [bezier26Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.84516 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.58024 * CGRectGetHeight(group))];
        [bezier26Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.84774 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.56266 * CGRectGetHeight(group))];
        [bezier26Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.55609 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.51708 * CGRectGetHeight(group))];
        [bezier26Path closePath];
        bezier26Path.miterLimit = 4;

        [UIColor.blackColor setFill];
        [bezier26Path fill];


        //// Bezier 28 Drawing
        UIBezierPath* bezier28Path = UIBezierPath.bezierPath;
        [bezier28Path moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.39809 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.57791 * CGRectGetHeight(group))];
        [bezier28Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.17310 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.62522 * CGRectGetHeight(group))];
        [bezier28Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.17656 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.64265 * CGRectGetHeight(group))];
        [bezier28Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.39875 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.59595 * CGRectGetHeight(group))];
        [bezier28Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.39809 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.57791 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.39792 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.59011 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.39786 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.58401 * CGRectGetHeight(group))];
        [bezier28Path closePath];
        bezier28Path.miterLimit = 4;

        [UIColor.blackColor setFill];
        [bezier28Path fill];


        //// Bezier 30 Drawing
        UIBezierPath* bezier30Path = UIBezierPath.bezierPath;
        [bezier30Path moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.51091 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.57107 * CGRectGetHeight(group))];
        [bezier30Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.50622 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.58834 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.50853 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.57654 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.50694 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.58232 * CGRectGetHeight(group))];
        [bezier30Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.83638 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.63992 * CGRectGetHeight(group))];
        [bezier30Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.83896 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.62232 * CGRectGetHeight(group))];
        [bezier30Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.51091 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.57107 * CGRectGetHeight(group))];
        [bezier30Path closePath];
        bezier30Path.miterLimit = 4;

        [UIColor.blackColor setFill];
        [bezier30Path fill];


        //// Bezier 32 Drawing
        UIBezierPath* bezier32Path = UIBezierPath.bezierPath;
        [bezier32Path moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.41687 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.63560 * CGRectGetHeight(group))];
        [bezier32Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.18483 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.68438 * CGRectGetHeight(group))];
        [bezier32Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.18829 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.70182 * CGRectGetHeight(group))];
        [bezier32Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.42954 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.65109 * CGRectGetHeight(group))];
        [bezier32Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.41687 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.63560 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.42496 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.64619 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.42078 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.64103 * CGRectGetHeight(group))];
        [bezier32Path closePath];
        bezier32Path.miterLimit = 4;

        [UIColor.blackColor setFill];
        [bezier32Path fill];


        //// Bezier 34 Drawing
        UIBezierPath* bezier34Path = UIBezierPath.bezierPath;
        [bezier34Path moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.51532 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.63285 * CGRectGetHeight(group))];
        [bezier34Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.52559 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.65241 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.51843 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.63946 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.52199 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.64596 * CGRectGetHeight(group))];
        [bezier34Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.82758 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.69961 * CGRectGetHeight(group))];
        [bezier34Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.83017 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.68201 * CGRectGetHeight(group))];
        [bezier34Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.51532 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.63285 * CGRectGetHeight(group))];
        [bezier34Path closePath];
        bezier34Path.miterLimit = 4;

        [UIColor.blackColor setFill];
        [bezier34Path fill];


        //// Bezier 36 Drawing
        UIBezierPath* bezier36Path = UIBezierPath.bezierPath;
        [bezier36Path moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.46355 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.68739 * CGRectGetHeight(group))];
        [bezier36Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.19656 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.74352 * CGRectGetHeight(group))];
        [bezier36Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.20002 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.76096 * CGRectGetHeight(group))];
        [bezier36Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.47172 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.70384 * CGRectGetHeight(group))];
        [bezier36Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.46355 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.68739 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.46977 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.69826 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.46707 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.69280 * CGRectGetHeight(group))];
        [bezier36Path closePath];
        bezier36Path.miterLimit = 4;

        [UIColor.blackColor setFill];
        [bezier36Path fill];


        //// Bezier 38 Drawing
        UIBezierPath* bezier38Path = UIBezierPath.bezierPath;
        [bezier38Path moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.61645 * CGRectGetWidth(group), CGRectGetMinY(group) + -0.00000 * CGRectGetHeight(group))];
        [bezier38Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.61672 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00047 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.61653 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00018 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.61665 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00030 * CGRectGetHeight(group))];
        [bezier38Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.63253 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.03244 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.62136 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.01081 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.62683 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.02151 * CGRectGetHeight(group))];
        [bezier38Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.96730 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.08472 * CGRectGetHeight(group))];
        [bezier38Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.83757 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.96597 * CGRectGetHeight(group))];
        [bezier38Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.46876 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.91005 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.83757 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.96597 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.46999 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.91209 * CGRectGetHeight(group))];
        [bezier38Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.20697 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.96509 * CGRectGetHeight(group))];
        [bezier38Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.03389 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.09178 * CGRectGetHeight(group))];
        [bezier38Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.32319 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.03096 * CGRectGetHeight(group))];
        [bezier38Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.31184 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00316 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.32054 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.02850 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.31443 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.01147 * CGRectGetHeight(group))];
        [bezier38Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06871 * CGRectGetHeight(group))];
        [bezier38Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.18456 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group))];
        [bezier38Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.47906 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.93808 * CGRectGetHeight(group))];
        [bezier38Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.86164 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.99965 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.47927 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.93871 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.86164 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.99965 * CGRectGetHeight(group))];
        [bezier38Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 1.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.05991 * CGRectGetHeight(group))];
        [bezier38Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.61645 * CGRectGetWidth(group), CGRectGetMinY(group) + -0.00000 * CGRectGetHeight(group))];
        [bezier38Path closePath];
        bezier38Path.miterLimit = 4;

        [UIColor.blackColor setFill];
        [bezier38Path fill];
    }
}



+ (void)drawNoteShuffleButtonWithFrame: (CGRect)frame
{
    // TODO: add new icon code from PaintCode
}



+ (void)drawAppIcon
{
}

#pragma mark Generated Images

+ (UIImage*)imageOfBackButtonWithFrame: (CGRect)frame
{
    UIGraphicsBeginImageContextWithOptions(frame.size, NO, 0.0f);
    [AccessLectureKit drawBackButtonWithFrame: frame];

    UIImage* imageOfBackButton = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return imageOfBackButton;
}

+ (UIImage*)imageOfNoLecture:(CGRect)frame
{
    UIGraphicsBeginImageContextWithOptions(frame.size, NO, 0.0f);
    [AccessLectureKit drawLectureNoInfoWithFrame:frame];
    
    UIImage* imageOfBackButton = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    
    return imageOfBackButton;
}


@end



@implementation UIColor (PaintCodeAdditions)

- (UIColor*)blendedColorWithFraction: (CGFloat)fraction ofColor: (UIColor*)color2
{
    UIColor* color1 = self;

    CGFloat r1 = 0, g1 = 0, b1 = 0, a1 = 0;
    CGFloat r2 = 0, g2 = 0, b2 = 0, a2 = 0;


    [color1 getRed: &r1 green: &g1 blue: &b1 alpha: &a1];
    [color2 getRed: &r2 green: &g2 blue: &b2 alpha: &a2];

    CGFloat r = r1 * (1 - fraction) + r2 * fraction;
    CGFloat g = g1 * (1 - fraction) + g2 * fraction;
    CGFloat b = b1 * (1 - fraction) + b2 * fraction;
    CGFloat a = a1 * (1 - fraction) + a2 * fraction;

    return [UIColor colorWithRed: r green: g blue: b alpha: a];
}

@end
