//
//  AccessLectureKit.m
//  AccessLecture
//
//  Created by Michael on 2/2/15.
//  Copyright (c) 2015 RIT . All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "AccessLectureKit.h"


@implementation AccessLectureKit

#pragma mark Cache

static UIColor* _accessBlue = nil;
static UIColor* _brushDefault = nil;

#pragma mark Initialization

+ (void)initialize
{
    // Colors Initialization
    _accessBlue = [UIColor colorWithRed: 0.364 green: 0.466 blue: 0.562 alpha: 1];
    _brushDefault = [UIColor colorWithRed: 1 green: 0.624 blue: 0 alpha: 1];

}

#pragma mark Colors

+ (UIColor*)accessBlue { return _accessBlue; }
+ (UIColor*)brushDefault { return _brushDefault; }

#pragma mark Drawing Methods

+ (void)drawBackButtonWithFrame: (CGRect)frame
{
    //// Color Declarations
    UIColor* color0 = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 1];


    //// Subframes
    CGRect left = CGRectMake(CGRectGetMinX(frame) + 18.26, CGRectGetMinY(frame) + 8, CGRectGetWidth(frame) - 37, CGRectGetHeight(frame) - 16);


    //// Captions
    {
    }


    //// Plus
    {
    }


    //// Minus
    {
    }


    //// Right
    {
    }


    //// Left
    {
        //// Oval 2 Drawing
        UIBezierPath* oval2Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(CGRectGetMinX(left) + floor(CGRectGetWidth(left) * 0.00000 + 0.5), CGRectGetMinY(left) + floor(CGRectGetHeight(left) * 0.00000 + 0.5), floor(CGRectGetWidth(left) * 1.00000 + 0.5) - floor(CGRectGetWidth(left) * 0.00000 + 0.5), floor(CGRectGetHeight(left) * 1.00000 + 0.5) - floor(CGRectGetHeight(left) * 0.00000 + 0.5))];
        [color0 setStroke];
        oval2Path.lineWidth = 6;
        [oval2Path stroke];


        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
        [bezier2Path moveToPoint: CGPointMake(CGRectGetMinX(left) + 0.80851 * CGRectGetWidth(left), CGRectGetMinY(left) + 0.53191 * CGRectGetHeight(left))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(left) + 0.30851 * CGRectGetWidth(left), CGRectGetMinY(left) + 0.53191 * CGRectGetHeight(left))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(left) + 0.45745 * CGRectGetWidth(left), CGRectGetMinY(left) + 0.68085 * CGRectGetHeight(left))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(left) + 0.37234 * CGRectGetWidth(left), CGRectGetMinY(left) + 0.68085 * CGRectGetHeight(left))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(left) + 0.19149 * CGRectGetWidth(left), CGRectGetMinY(left) + 0.50000 * CGRectGetHeight(left))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(left) + 0.37234 * CGRectGetWidth(left), CGRectGetMinY(left) + 0.31915 * CGRectGetHeight(left))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(left) + 0.45745 * CGRectGetWidth(left), CGRectGetMinY(left) + 0.31915 * CGRectGetHeight(left))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(left) + 0.30851 * CGRectGetWidth(left), CGRectGetMinY(left) + 0.46809 * CGRectGetHeight(left))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(left) + 0.80851 * CGRectGetWidth(left), CGRectGetMinY(left) + 0.46809 * CGRectGetHeight(left))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(left) + 0.80851 * CGRectGetWidth(left), CGRectGetMinY(left) + 0.53191 * CGRectGetHeight(left))];
        [bezier2Path closePath];
        bezier2Path.miterLimit = 4;

        [UIColor.redColor setStroke];
        bezier2Path.lineWidth = 5.5;
        [bezier2Path stroke];
    }


    //// Up
    {
    }


    //// Down
    {
    }


    //// Play
    {
    }


    //// Forward
    {
    }


    //// Reverse
    {
    }


    //// Stop
    {
    }


    //// Pause_1_
    {
    }


    //// Record
    {
    }


    //// Close
    {
    }


    //// Check
    {
    }


    //// Power
    {
    }


    //// Skip_Forward
    {
    }


    //// Skip_Backward
    {
    }


    //// Cancel
    {
    }


    //// Info
    {
    }


    //// Help
    {
    }
}

+ (void)drawCreateButtonWithFrame: (CGRect)frame
{
    //// Color Declarations
    UIColor* color0 = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 1];
    UIColor* color2 = [UIColor colorWithRed: 0.12 green: 0.562 blue: 0.192 alpha: 1];


    //// Subframes
    CGRect your_Icon = CGRectMake(CGRectGetMinX(frame) + 19, CGRectGetMinY(frame) + 9.43, CGRectGetWidth(frame) - 37.9, CGRectGetHeight(frame) - 19);


    //// Captions
    {
    }


    //// Your_Icon
    {
        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
        [bezier2Path moveToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.00000 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 1.00000 * CGRectGetHeight(your_Icon))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 1.00000 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 1.00000 * CGRectGetHeight(your_Icon))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 1.00000 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.00123 * CGRectGetHeight(your_Icon))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.59197 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.00123 * CGRectGetHeight(your_Icon))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.59197 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.08889 * CGRectGetHeight(your_Icon))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.91351 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.08889 * CGRectGetHeight(your_Icon))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.91351 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.91233 * CGRectGetHeight(your_Icon))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.08649 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.91233 * CGRectGetHeight(your_Icon))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.08649 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.60001 * CGRectGetHeight(your_Icon))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.00000 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.60001 * CGRectGetHeight(your_Icon))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.00000 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 1.00000 * CGRectGetHeight(your_Icon))];
        [bezier2Path closePath];
        bezier2Path.miterLimit = 4;

        [color0 setFill];
        [bezier2Path fill];


        //// Bezier 4 Drawing
        UIBezierPath* bezier4Path = UIBezierPath.bezierPath;
        [bezier4Path moveToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.85261 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.35590 * CGRectGetHeight(your_Icon))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.49937 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.35590 * CGRectGetHeight(your_Icon))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.49937 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.00000 * CGRectGetHeight(your_Icon))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.35322 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.00000 * CGRectGetHeight(your_Icon))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.35322 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.35590 * CGRectGetHeight(your_Icon))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.00002 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.35590 * CGRectGetHeight(your_Icon))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.00002 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.50297 * CGRectGetHeight(your_Icon))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.35322 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.50297 * CGRectGetHeight(your_Icon))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.35322 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.85889 * CGRectGetHeight(your_Icon))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.49937 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.85889 * CGRectGetHeight(your_Icon))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.49937 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.50297 * CGRectGetHeight(your_Icon))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.85261 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.50297 * CGRectGetHeight(your_Icon))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.85261 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.35590 * CGRectGetHeight(your_Icon))];
        [bezier4Path closePath];
        bezier4Path.miterLimit = 4;

        [color2 setFill];
        [bezier4Path fill];
    }
}

+ (void)drawSearchButtonWithFrame: (CGRect)frame
{
    //// General Declarations
    CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Color Declarations
    UIColor* color = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 1];
    UIColor* gradientColor = [UIColor colorWithRed: 0.62 green: 0.455 blue: 0.251 alpha: 1];

    //// Gradient Declarations
    CGFloat gradientLocations[] = {0, 0.14, 0.39, 0.39, 0.41};
    CGGradientRef gradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)gradientColor.CGColor, (id)gradientColor.CGColor, (id)gradientColor.CGColor, (id)[gradientColor blendedColorWithFraction: 0.5 ofColor: color].CGColor, (id)color.CGColor], gradientLocations);


    //// Subframes
    CGRect group = CGRectMake(CGRectGetMinX(frame) + 19, CGRectGetMinY(frame) + 8, CGRectGetWidth(frame) - 37, CGRectGetHeight(frame) - 19);


    //// Group
    {
        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
        [bezier2Path moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.00664 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.89223 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.31948 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.57884 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.25703 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.37213 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.27885 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.51816 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.25703 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.44682 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.36583 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.10899 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.25703 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.27273 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.29566 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.17928 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.62851 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00000 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.43600 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.03871 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.52928 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00000 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.89120 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.10899 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.72774 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00000 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.82103 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.03871 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 1.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.37213 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.96136 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.17928 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 1.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.27273 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.89119 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.63525 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 1.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.47152 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.96136 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.56496 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.62850 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.74425 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.82102 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.70554 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.72774 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.74425 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.42012 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.68029 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.55309 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.74425 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.48113 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.72187 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.10758 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.99336 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.06426 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.98824 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.09703 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00393 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.07763 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00163 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.01174 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.93563 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.00664 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.89223 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + -0.00163 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92223 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + -0.00392 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.90280 * CGRectGetHeight(group))];
        [bezier2Path closePath];
        [bezier2Path moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.62851 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.64344 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.89937 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.37213 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.77787 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.64344 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.89937 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.52173 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.62851 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.10080 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.89937 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.22252 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.77786 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.10080 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.35766 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.37213 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.47916 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.10080 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.35766 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.22252 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.62851 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.64344 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.35766 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.52173 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.47916 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.64344 * CGRectGetHeight(group))];
        [bezier2Path closePath];
        bezier2Path.miterLimit = 4;

        CGContextSaveGState(context);
        [bezier2Path addClip];
        UIBezierPath* bezier2RotatedPath = [bezier2Path copy];
        CGAffineTransform bezier2Transform = CGAffineTransformMakeRotation(-45*(-M_PI/180));
        [bezier2RotatedPath applyTransform: bezier2Transform];
        CGRect bezier2Bounds = CGPathGetPathBoundingBox(bezier2RotatedPath.CGPath);
        bezier2Transform = CGAffineTransformInvert(bezier2Transform);

        CGContextDrawLinearGradient(context, gradient,
            CGPointApplyAffineTransform(CGPointMake(CGRectGetMinX(bezier2Bounds), CGRectGetMidY(bezier2Bounds)), bezier2Transform),
            CGPointApplyAffineTransform(CGPointMake(CGRectGetMaxX(bezier2Bounds), CGRectGetMidY(bezier2Bounds)), bezier2Transform),
            0);
        CGContextRestoreGState(context);
    }


    //// Cleanup
    CGGradientRelease(gradient);
    CGColorSpaceRelease(colorSpace);
}

+ (void)drawBrushButtonWithFrame: (CGRect)frame brushColor: (UIColor*)brushColor
{
    //// Color Declarations
    UIColor* color3 = [UIColor colorWithRed: 0.005 green: 0.005 blue: 0.005 alpha: 1];


    //// Subframes
    CGRect group = CGRectMake(CGRectGetMinX(frame) + 11.81, CGRectGetMinY(frame) + 8.1, CGRectGetWidth(frame) - 22.63, CGRectGetHeight(frame) - 17.71);


    //// Group
    {
        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
        [bezier2Path moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.46151 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.85098 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.41697 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.63696 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.49981 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.77756 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.47977 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.68175 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.23383 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.68860 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.35405 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.59208 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.27213 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.61518 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.23370 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.68885 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.83739 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.18246 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.78705 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.09199 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.84001 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.00024 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.83810 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.09522 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.95426 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.02188 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.88433 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.05387 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92477 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.46151 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.85098 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.22096 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.04394 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.38496 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.99770 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.46151 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.85098 * CGRectGetHeight(group))];
        [bezier2Path closePath];
        bezier2Path.miterLimit = 4;

        [brushColor setFill];
        [bezier2Path fill];


        //// Bezier 4 Drawing
        UIBezierPath* bezier4Path = UIBezierPath.bezierPath;
        [bezier4Path moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.97636 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.02435 * CGRectGetHeight(group))];
        [bezier4Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.84030 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06424 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.93246 * CGRectGetWidth(group), CGRectGetMinY(group) + -0.02768 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.88420 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.01220 * CGRectGetHeight(group))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.41538 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.56794 * CGRectGetHeight(group))];
        [bezier4Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.52860 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.68996 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.49286 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.59252 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.50797 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.59799 * CGRectGetHeight(group))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.95352 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.18614 * CGRectGetHeight(group))];
        [bezier4Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.97636 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.02435 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.99742 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.13409 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 1.02026 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.07639 * CGRectGetHeight(group))];
        [bezier4Path closePath];
        bezier4Path.miterLimit = 4;

        [color3 setFill];
        [bezier4Path fill];
    }
}

+ (void)drawSaveButtonWithFrame: (CGRect)frame
{
    //// Color Declarations
    UIColor* color4 = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 1];
    UIColor* color5 = [UIColor colorWithRed: 0.205 green: 0.294 blue: 0.67 alpha: 1];


    //// Subframes
    CGRect group = CGRectMake(CGRectGetMinX(frame) + 19, CGRectGetMinY(frame) + 9.23, CGRectGetWidth(frame) - 37.3, CGRectGetHeight(frame) - 18.23);


    //// Group
    {
        //// Guts Drawing
        UIBezierPath* gutsPath = UIBezierPath.bezierPath;
        [gutsPath moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.96678 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.20201 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.78601 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.01877 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.76922 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.01223 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.78213 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.01485 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.77568 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.01223 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.69949 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.01223 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.29792 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.01223 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.08745 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.01223 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.02418 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.07636 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.05259 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.01223 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.02418 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.04102 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.02418 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.91141 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.08745 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.97554 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.02418 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.94675 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.05259 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.97554 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.22174 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.97554 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.79504 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.97554 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.91255 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.97554 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.97582 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.91141 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.94741 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.97554 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.97582 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.94675 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.97582 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.21903 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.96678 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.20201 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.97452 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.21379 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.97194 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.20725 * CGRectGetHeight(group))];
        [gutsPath closePath];
        [gutsPath moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.66416 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.66416 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.26308 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.67496 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.26439 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.66416 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.26439 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.67496 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.26439 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.59702 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.26439 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.59702 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.66416 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [gutsPath closePath];
        [gutsPath moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.53586 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.53586 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.26439 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.33584 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.26439 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.33455 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.26308 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.33455 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.26439 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.33455 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.26308 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.33455 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.53586 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [gutsPath closePath];
        [gutsPath moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.25708 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.25708 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.62739 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.34570 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.53753 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.25708 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.57111 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.29018 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.53753 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.66980 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.53753 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.75842 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.62739 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.72532 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.53753 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.75842 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.57111 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.75842 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.25708 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group))];
        [gutsPath closePath];
        [gutsPath moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.92675 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.91141 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.91125 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.92675 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.91926 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.92029 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.81829 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.81829 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.62739 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.66980 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.47687 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.81829 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.54493 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.75114 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.47687 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.34699 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.47687 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.19850 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.62739 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.26564 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.47687 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.19850 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.54493 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.19850 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.08745 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.07196 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.91141 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.07971 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.07196 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92057 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.07196 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.07636 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.08745 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.07196 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06851 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.07842 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.27468 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.27468 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.26308 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.33584 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.32504 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.27468 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.29056 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.30872 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.32504 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.66287 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.32504 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.72403 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.26308 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.68998 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.32504 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.72403 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.29056 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.72403 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.76018 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.92675 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.22950 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.92675 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.91141 * CGRectGetHeight(group))];
        [gutsPath closePath];
        [gutsPath moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.68142 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.78445 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.65817 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.82024 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.68142 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.79754 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.67109 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.82024 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.36248 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.82024 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.33924 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.78445 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.34957 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.82024 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.33924 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.79754 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.36248 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.74866 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.33924 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.77136 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.34957 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.74866 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.65688 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.74866 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.68142 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.78445 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.67109 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.74866 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.68142 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.77136 * CGRectGetHeight(group))];
        [gutsPath closePath];
        [gutsPath moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.68142 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.65880 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.65817 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.69459 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.68142 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.67189 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.67109 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.69459 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.36248 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.69459 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.33924 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.65880 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.34957 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.69459 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.33924 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.67189 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.36248 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.62301 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.33924 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.64571 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.34957 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.62301 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.65688 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.62301 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.68142 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.65880 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.67109 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.62170 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.68142 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.64440 * CGRectGetHeight(group))];
        [gutsPath closePath];
        gutsPath.miterLimit = 4;

        [color5 setFill];
        [gutsPath fill];


        //// Outline Drawing
        UIBezierPath* outlinePath = UIBezierPath.bezierPath;
        [outlinePath moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.99096 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.20201 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.78601 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00654 * CGRectGetHeight(group))];
        [outlinePath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.76922 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00000 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.78213 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00262 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.77568 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00000 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.69949 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00000 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.29792 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00000 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.08745 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00000 * CGRectGetHeight(group))];
        [outlinePath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.07636 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.05259 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00000 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.04102 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.91141 * CGRectGetHeight(group))];
        [outlinePath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.08745 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.94675 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.05259 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.22174 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.79504 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.91255 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group))];
        [outlinePath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 1.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.91141 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.94741 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 1.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.94675 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 1.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.21903 * CGRectGetHeight(group))];
        [outlinePath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.99096 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.20201 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.99871 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.21379 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.99613 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.20725 * CGRectGetHeight(group))];
        [outlinePath closePath];
        [outlinePath moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.67625 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.60911 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.67625 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [outlinePath closePath];
        [outlinePath moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.56004 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.32246 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.56004 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [outlinePath closePath];
        [outlinePath moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.24498 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.77051 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.24498 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group))];
        [outlinePath closePath];
        [outlinePath moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.92675 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.91141 * CGRectGetHeight(group))];
        [outlinePath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.91125 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.92675 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.91926 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.92029 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.81829 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.19850 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.08745 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group))];
        [outlinePath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.07196 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.91141 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.07971 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.07196 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92057 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.07196 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.07636 * CGRectGetHeight(group))];
        [outlinePath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.08745 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.07196 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06851 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.07842 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.27468 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.72403 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.76018 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.92675 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.22950 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.92675 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.91141 * CGRectGetHeight(group))];
        [outlinePath closePath];
        outlinePath.miterLimit = 4;

        [color4 setFill];
        [outlinePath fill];
    }
}

+ (void)drawCheckButtonWithFrame: (CGRect)frame
{
    //// Color Declarations
    UIColor* color0 = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 1];


    //// Subframes
    CGRect group = CGRectMake(CGRectGetMinX(frame) + 18.26, CGRectGetMinY(frame) + 8, CGRectGetWidth(frame) - 28.26, CGRectGetHeight(frame) - 16);


    //// Left
    {
        //// Group
        {
            //// Oval 2 Drawing
            UIBezierPath* oval2Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(CGRectGetMinX(group) + floor(CGRectGetWidth(group) * 0.00000 + 0.5), CGRectGetMinY(group) + floor(CGRectGetHeight(group) * 0.00000 + 0.5), floor(CGRectGetWidth(group) * 0.90471 + 0.5) - floor(CGRectGetWidth(group) * 0.00000 + 0.5), floor(CGRectGetHeight(group) * 1.00000 + 0.5) - floor(CGRectGetHeight(group) * 0.00000 + 0.5))];
            [color0 setStroke];
            oval2Path.lineWidth = 6;
            [oval2Path stroke];


            //// Bezier 2 Drawing
            UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
            [bezier2Path moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.91435 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00000 * CGRectGetHeight(group))];
            [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.87417 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.04988 * CGRectGetHeight(group))];
            [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.39725 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.63834 * CGRectGetHeight(group))];
            [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.21952 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.43614 * CGRectGetHeight(group))];
            [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.17750 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.38839 * CGRectGetHeight(group))];
            [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.09529 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.48602 * CGRectGetHeight(group))];
            [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.13731 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.53377 * CGRectGetHeight(group))];
            [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.35775 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.78478 * CGRectGetHeight(group))];
            [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.40046 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.83333 * CGRectGetHeight(group))];
            [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.44156 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.78265 * CGRectGetHeight(group))];
            [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.95959 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.14325 * CGRectGetHeight(group))];
            [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 1.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.09363 * CGRectGetHeight(group))];
            [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.91435 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00000 * CGRectGetHeight(group))];
            [bezier2Path closePath];
            bezier2Path.miterLimit = 4;

            [UIColor.greenColor setFill];
            [bezier2Path fill];
        }
    }
}

+ (void)drawTextInputWithFrame: (CGRect)frame
{

    //// Rectangle Drawing
    UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRoundedRect: CGRectMake(CGRectGetMinX(frame) + 1, CGRectGetMinY(frame) + 1, CGRectGetWidth(frame) - 2, CGRectGetHeight(frame) - 2) cornerRadius: 10];
    [AccessLectureKit.accessBlue setStroke];
    rectanglePath.lineWidth = 4;
    [rectanglePath stroke];
}

+ (void)drawLectureNoInfoWithFrame: (CGRect)frame
{

    //// Group
    {
        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
        [bezier2Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 76.92, CGRectGetMinY(frame) + 42.25)];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 76.49, CGRectGetMinY(frame) + 40.74) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 76.81, CGRectGetMinY(frame) + 41.73) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 76.66, CGRectGetMinY(frame) + 41.23)];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 50.49, CGRectGetMinY(frame) + 46.02)];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 49.07, CGRectGetMinY(frame) + 39.1)];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 72.14, CGRectGetMinY(frame) + 34.41)];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 69.68, CGRectGetMinY(frame) + 32.15) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 71.36, CGRectGetMinY(frame) + 33.64) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 70.53, CGRectGetMinY(frame) + 32.88)];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 45.86, CGRectGetMinY(frame) + 36.99)];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 48.37, CGRectGetMinY(frame) + 49.22)];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 77.03, CGRectGetMinY(frame) + 43.39)];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 76.92, CGRectGetMinY(frame) + 42.25) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 77.02, CGRectGetMinY(frame) + 43.01) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 76.99, CGRectGetMinY(frame) + 42.63)];
        [bezier2Path closePath];
        bezier2Path.miterLimit = 4;

        [UIColor.blackColor setFill];
        [bezier2Path fill];


        //// Bezier 4 Drawing
        UIBezierPath* bezier4Path = UIBezierPath.bezierPath;
        [bezier4Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 115.2, CGRectGetMinY(frame) + 34.41)];
        [bezier4Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 116.38, CGRectGetMinY(frame) + 37.32) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 115.63, CGRectGetMinY(frame) + 35.38) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 116.03, CGRectGetMinY(frame) + 36.35)];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 131.79, CGRectGetMinY(frame) + 39.65)];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 130.73, CGRectGetMinY(frame) + 46.63)];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 117.72, CGRectGetMinY(frame) + 44.67)];
        [bezier4Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 117.36, CGRectGetMinY(frame) + 47.36) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 117.69, CGRectGetMinY(frame) + 45.57) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 117.57, CGRectGetMinY(frame) + 46.47)];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 133.01, CGRectGetMinY(frame) + 49.72)];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 134.89, CGRectGetMinY(frame) + 37.38)];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 115.2, CGRectGetMinY(frame) + 34.41)];
        [bezier4Path closePath];
        bezier4Path.miterLimit = 4;

        [UIColor.blackColor setFill];
        [bezier4Path fill];


        //// Bezier 6 Drawing
        UIBezierPath* bezier6Path = UIBezierPath.bezierPath;
        [bezier6Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 27.71, CGRectGetMinY(frame) + 62.57)];
        [bezier6Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 65.48, CGRectGetMinY(frame) + 54.89)];
        [bezier6Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 66.03, CGRectGetMinY(frame) + 57.55)];
        [bezier6Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 28.25, CGRectGetMinY(frame) + 65.23)];
        [bezier6Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 27.71, CGRectGetMinY(frame) + 62.57)];
        [bezier6Path closePath];
        bezier6Path.miterLimit = 4;

        [UIColor.blackColor setFill];
        [bezier6Path fill];


        //// Bezier 8 Drawing
        UIBezierPath* bezier8Path = UIBezierPath.bezierPath;
        [bezier8Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 67.16, CGRectGetMinY(frame) + 63.93)];
        [bezier8Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 29.55, CGRectGetMinY(frame) + 71.58)];
        [bezier8Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 30.09, CGRectGetMinY(frame) + 74.23)];
        [bezier8Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 67.41, CGRectGetMinY(frame) + 66.65)];
        [bezier8Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 67.16, CGRectGetMinY(frame) + 63.93) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 67.23, CGRectGetMinY(frame) + 65.78) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 67.16, CGRectGetMinY(frame) + 64.87)];
        [bezier8Path closePath];
        bezier8Path.miterLimit = 4;

        [UIColor.blackColor setFill];
        [bezier8Path fill];


        //// Bezier 10 Drawing
        UIBezierPath* bezier10Path = UIBezierPath.bezierPath;
        [bezier10Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 101.55, CGRectGetMinY(frame) + 63.34)];
        [bezier10Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 100.45, CGRectGetMinY(frame) + 65.91) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 100.96, CGRectGetMinY(frame) + 64.22) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 100.61, CGRectGetMinY(frame) + 65.07)];
        [bezier10Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 150.08, CGRectGetMinY(frame) + 73.41)];
        [bezier10Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 150.49, CGRectGetMinY(frame) + 70.73)];
        [bezier10Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 101.55, CGRectGetMinY(frame) + 63.34)];
        [bezier10Path closePath];
        bezier10Path.miterLimit = 4;

        [UIColor.blackColor setFill];
        [bezier10Path fill];


        //// Bezier 12 Drawing
        UIBezierPath* bezier12Path = UIBezierPath.bezierPath;
        [bezier12Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 70.43, CGRectGetMinY(frame) + 72.64)];
        [bezier12Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 31.4, CGRectGetMinY(frame) + 80.58)];
        [bezier12Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 31.94, CGRectGetMinY(frame) + 83.23)];
        [bezier12Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 72.81, CGRectGetMinY(frame) + 74.92)];
        [bezier12Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 70.43, CGRectGetMinY(frame) + 72.64) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 71.93, CGRectGetMinY(frame) + 74.21) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 71.13, CGRectGetMinY(frame) + 73.46)];
        [bezier12Path closePath];
        bezier12Path.miterLimit = 4;

        [UIColor.blackColor setFill];
        [bezier12Path fill];


        //// Bezier 14 Drawing
        UIBezierPath* bezier14Path = UIBezierPath.bezierPath;
        [bezier14Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 102.5, CGRectGetMinY(frame) + 72.77)];
        [bezier14Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 104.58, CGRectGetMinY(frame) + 75.83) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 103.19, CGRectGetMinY(frame) + 73.82) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 103.92, CGRectGetMinY(frame) + 74.84)];
        [bezier14Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 148.7, CGRectGetMinY(frame) + 82.49)];
        [bezier14Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 149.1, CGRectGetMinY(frame) + 79.81)];
        [bezier14Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 102.5, CGRectGetMinY(frame) + 72.77)];
        [bezier14Path closePath];
        bezier14Path.miterLimit = 4;

        [UIColor.blackColor setFill];
        [bezier14Path fill];


        //// Bezier 16 Drawing
        UIBezierPath* bezier16Path = UIBezierPath.bezierPath;
        [bezier16Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 79.09, CGRectGetMinY(frame) + 80.26)];
        [bezier16Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 33.24, CGRectGetMinY(frame) + 89.58)];
        [bezier16Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 33.78, CGRectGetMinY(frame) + 92.23)];
        [bezier16Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 80.72, CGRectGetMinY(frame) + 82.7)];
        [bezier16Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 79.09, CGRectGetMinY(frame) + 80.26) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 80.3, CGRectGetMinY(frame) + 81.82) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 79.74, CGRectGetMinY(frame) + 81.01)];
        [bezier16Path closePath];
        bezier16Path.miterLimit = 4;

        [UIColor.blackColor setFill];
        [bezier16Path fill];


        //// Bezier 18 Drawing
        UIBezierPath* bezier18Path = UIBezierPath.bezierPath;
        [bezier18Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 107.36, CGRectGetMinY(frame) + 82.8)];
        [bezier18Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 107.53, CGRectGetMinY(frame) + 85.56) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 107.5, CGRectGetMinY(frame) + 83.72) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 107.56, CGRectGetMinY(frame) + 84.64)];
        [bezier18Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 147.32, CGRectGetMinY(frame) + 91.57)];
        [bezier18Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 147.72, CGRectGetMinY(frame) + 88.89)];
        [bezier18Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 107.36, CGRectGetMinY(frame) + 82.8)];
        [bezier18Path closePath];
        bezier18Path.miterLimit = 4;

        [UIColor.blackColor setFill];
        [bezier18Path fill];


        //// Bezier 20 Drawing
        UIBezierPath* bezier20Path = UIBezierPath.bezierPath;
        [bezier20Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 81.24, CGRectGetMinY(frame) + 89.45)];
        [bezier20Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 81.28, CGRectGetMinY(frame) + 89.19) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 81.26, CGRectGetMinY(frame) + 89.36) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 81.27, CGRectGetMinY(frame) + 89.28)];
        [bezier20Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 35.09, CGRectGetMinY(frame) + 98.58)];
        [bezier20Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 35.63, CGRectGetMinY(frame) + 101.24)];
        [bezier20Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 80.4, CGRectGetMinY(frame) + 92.14)];
        [bezier20Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 81.24, CGRectGetMinY(frame) + 89.45) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 80.74, CGRectGetMinY(frame) + 91.25) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 81.03, CGRectGetMinY(frame) + 90.36)];
        [bezier20Path closePath];
        bezier20Path.miterLimit = 4;

        [UIColor.blackColor setFill];
        [bezier20Path fill];


        //// Bezier 22 Drawing
        UIBezierPath* bezier22Path = UIBezierPath.bezierPath;
        [bezier22Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 106.03, CGRectGetMinY(frame) + 91.89)];
        [bezier22Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 105.79, CGRectGetMinY(frame) + 92.48) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 105.95, CGRectGetMinY(frame) + 92.09) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 105.88, CGRectGetMinY(frame) + 92.28)];
        [bezier22Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 104.62, CGRectGetMinY(frame) + 94.42) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 105.48, CGRectGetMinY(frame) + 93.14) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 105.08, CGRectGetMinY(frame) + 93.79)];
        [bezier22Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 145.93, CGRectGetMinY(frame) + 100.65)];
        [bezier22Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 146.34, CGRectGetMinY(frame) + 97.98)];
        [bezier22Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 106.03, CGRectGetMinY(frame) + 91.89)];
        [bezier22Path closePath];
        bezier22Path.miterLimit = 4;

        [UIColor.blackColor setFill];
        [bezier22Path fill];


        //// Bezier 24 Drawing
        UIBezierPath* bezier24Path = UIBezierPath.bezierPath;
        [bezier24Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 76.57, CGRectGetMinY(frame) + 100.07)];
        [bezier24Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 76.87, CGRectGetMinY(frame) + 99.47) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 76.67, CGRectGetMinY(frame) + 99.87) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 76.77, CGRectGetMinY(frame) + 99.67)];
        [bezier24Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 36.93, CGRectGetMinY(frame) + 107.58)];
        [bezier24Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 37.48, CGRectGetMinY(frame) + 110.24)];
        [bezier24Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 75.6, CGRectGetMinY(frame) + 102.49)];
        [bezier24Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 76.57, CGRectGetMinY(frame) + 100.07) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 75.91, CGRectGetMinY(frame) + 101.63) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 76.23, CGRectGetMinY(frame) + 100.81)];
        [bezier24Path closePath];
        bezier24Path.miterLimit = 4;

        [UIColor.blackColor setFill];
        [bezier24Path fill];


        //// Bezier 26 Drawing
        UIBezierPath* bezier26Path = UIBezierPath.bezierPath;
        [bezier26Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 99.05, CGRectGetMinY(frame) + 100.13)];
        [bezier26Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 96.48, CGRectGetMinY(frame) + 102.48) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 98.18, CGRectGetMinY(frame) + 100.91) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 97.31, CGRectGetMinY(frame) + 101.69)];
        [bezier26Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 144.55, CGRectGetMinY(frame) + 109.74)];
        [bezier26Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 144.96, CGRectGetMinY(frame) + 107.06)];
        [bezier26Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 99.05, CGRectGetMinY(frame) + 100.13)];
        [bezier26Path closePath];
        bezier26Path.miterLimit = 4;

        [UIColor.blackColor setFill];
        [bezier26Path fill];


        //// Bezier 28 Drawing
        UIBezierPath* bezier28Path = UIBezierPath.bezierPath;
        [bezier28Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 74.19, CGRectGetMinY(frame) + 109.38)];
        [bezier28Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 38.77, CGRectGetMinY(frame) + 116.58)];
        [bezier28Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 39.32, CGRectGetMinY(frame) + 119.24)];
        [bezier28Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 74.29, CGRectGetMinY(frame) + 112.13)];
        [bezier28Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 74.19, CGRectGetMinY(frame) + 109.38) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 74.16, CGRectGetMinY(frame) + 111.24) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 74.15, CGRectGetMinY(frame) + 110.31)];
        [bezier28Path closePath];
        bezier28Path.miterLimit = 4;

        [UIColor.blackColor setFill];
        [bezier28Path fill];


        //// Bezier 30 Drawing
        UIBezierPath* bezier30Path = UIBezierPath.bezierPath;
        [bezier30Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 91.94, CGRectGetMinY(frame) + 108.34)];
        [bezier30Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 91.2, CGRectGetMinY(frame) + 110.97) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 91.57, CGRectGetMinY(frame) + 109.18) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 91.32, CGRectGetMinY(frame) + 110.05)];
        [bezier30Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 143.17, CGRectGetMinY(frame) + 118.82)];
        [bezier30Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 143.57, CGRectGetMinY(frame) + 116.14)];
        [bezier30Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 91.94, CGRectGetMinY(frame) + 108.34)];
        [bezier30Path closePath];
        bezier30Path.miterLimit = 4;

        [UIColor.blackColor setFill];
        [bezier30Path fill];


        //// Bezier 32 Drawing
        UIBezierPath* bezier32Path = UIBezierPath.bezierPath;
        [bezier32Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 77.14, CGRectGetMinY(frame) + 118.16)];
        [bezier32Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 40.62, CGRectGetMinY(frame) + 125.59)];
        [bezier32Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 41.16, CGRectGetMinY(frame) + 128.24)];
        [bezier32Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 79.13, CGRectGetMinY(frame) + 120.52)];
        [bezier32Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 77.14, CGRectGetMinY(frame) + 118.16) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 78.41, CGRectGetMinY(frame) + 119.77) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 77.76, CGRectGetMinY(frame) + 118.99)];
        [bezier32Path closePath];
        bezier32Path.miterLimit = 4;

        [UIColor.blackColor setFill];
        [bezier32Path fill];


        //// Bezier 34 Drawing
        UIBezierPath* bezier34Path = UIBezierPath.bezierPath;
        [bezier34Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 92.64, CGRectGetMinY(frame) + 117.74)];
        [bezier34Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 94.25, CGRectGetMinY(frame) + 120.72) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 93.12, CGRectGetMinY(frame) + 118.75) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 93.68, CGRectGetMinY(frame) + 119.74)];
        [bezier34Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 141.78, CGRectGetMinY(frame) + 127.9)];
        [bezier34Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 142.19, CGRectGetMinY(frame) + 125.23)];
        [bezier34Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 92.64, CGRectGetMinY(frame) + 117.74)];
        [bezier34Path closePath];
        bezier34Path.miterLimit = 4;

        [UIColor.blackColor setFill];
        [bezier34Path fill];


        //// Bezier 36 Drawing
        UIBezierPath* bezier36Path = UIBezierPath.bezierPath;
        [bezier36Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 84.49, CGRectGetMinY(frame) + 126.04)];
        [bezier36Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 42.47, CGRectGetMinY(frame) + 134.58)];
        [bezier36Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 43.01, CGRectGetMinY(frame) + 137.24)];
        [bezier36Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 85.77, CGRectGetMinY(frame) + 128.55)];
        [bezier36Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 84.49, CGRectGetMinY(frame) + 126.04) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 85.47, CGRectGetMinY(frame) + 127.7) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 85.04, CGRectGetMinY(frame) + 126.87)];
        [bezier36Path closePath];
        bezier36Path.miterLimit = 4;

        [UIColor.blackColor setFill];
        [bezier36Path fill];


        //// Bezier 38 Drawing
        UIBezierPath* bezier38Path = UIBezierPath.bezierPath;
        [bezier38Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 108.55, CGRectGetMinY(frame) + 21.45)];
        [bezier38Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 108.6, CGRectGetMinY(frame) + 21.52) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 108.56, CGRectGetMinY(frame) + 21.47) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 108.58, CGRectGetMinY(frame) + 21.49)];
        [bezier38Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 111.08, CGRectGetMinY(frame) + 26.38) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 109.33, CGRectGetMinY(frame) + 23.09) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 110.19, CGRectGetMinY(frame) + 24.72)];
        [bezier38Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 163.77, CGRectGetMinY(frame) + 34.34)];
        [bezier38Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 143.35, CGRectGetMinY(frame) + 168.43)];
        [bezier38Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 85.31, CGRectGetMinY(frame) + 159.93) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 143.35, CGRectGetMinY(frame) + 168.43) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 85.5, CGRectGetMinY(frame) + 160.24)];
        [bezier38Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 44.1, CGRectGetMinY(frame) + 168.3)];
        [bezier38Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 16.86, CGRectGetMinY(frame) + 35.41)];
        [bezier38Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 62.4, CGRectGetMinY(frame) + 26.16)];
        [bezier38Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 60.61, CGRectGetMinY(frame) + 21.93) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 61.98, CGRectGetMinY(frame) + 25.78) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 61.02, CGRectGetMinY(frame) + 23.19)];
        [bezier38Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 11.53, CGRectGetMinY(frame) + 31.9)];
        [bezier38Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 40.58, CGRectGetMinY(frame) + 173.61)];
        [bezier38Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 86.93, CGRectGetMinY(frame) + 164.19)];
        [bezier38Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 147.14, CGRectGetMinY(frame) + 173.56) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 86.96, CGRectGetMinY(frame) + 164.29) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 147.14, CGRectGetMinY(frame) + 173.56)];
        [bezier38Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 168.92, CGRectGetMinY(frame) + 30.56)];
        [bezier38Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 108.55, CGRectGetMinY(frame) + 21.45)];
        [bezier38Path closePath];
        bezier38Path.miterLimit = 4;

        [UIColor.blackColor setFill];
        [bezier38Path fill];
    }
}

#pragma mark Generated Images

+ (UIImage*)imageOfBackButtonWithFrame: (CGRect)frame
{
    UIGraphicsBeginImageContextWithOptions(frame.size, NO, 0.0f);
    [AccessLectureKit drawBackButtonWithFrame: frame];

    UIImage* imageOfBackButton = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return imageOfBackButton;
}

@end



@implementation UIColor (PaintCodeAdditions)

- (UIColor*)blendedColorWithFraction: (CGFloat)fraction ofColor: (UIColor*)color2
{
    UIColor* color1 = self;

    CGFloat r1 = 0, g1 = 0, b1 = 0, a1 = 0;
    CGFloat r2 = 0, g2 = 0, b2 = 0, a2 = 0;


    [color1 getRed: &r1 green: &g1 blue: &b1 alpha: &a1];
    [color2 getRed: &r2 green: &g2 blue: &b2 alpha: &a2];

    CGFloat r = r1 * (1 - fraction) + r2 * fraction;
    CGFloat g = g1 * (1 - fraction) + g2 * fraction;
    CGFloat b = b1 * (1 - fraction) + b2 * fraction;
    CGFloat a = a1 * (1 - fraction) + a2 * fraction;

    return [UIColor colorWithRed: r green: g blue: b alpha: a];
}

@end
