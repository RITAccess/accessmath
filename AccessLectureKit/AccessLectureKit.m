//
//  AccessLectureKit.m
//  AccessLecture
//
//  Created by Michael on 1/26/15.
//  Copyright (c) 2015 RIT . All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "AccessLectureKit.h"


@implementation AccessLectureKit

#pragma mark Cache

static UIColor* _accessBlue = nil;
static UIColor* _brushDefault = nil;

#pragma mark Initialization

+ (void)initialize
{
    // Colors Initialization
    _accessBlue = [UIColor colorWithRed: 0.364 green: 0.466 blue: 0.562 alpha: 1];
    _brushDefault = [UIColor colorWithRed: 1 green: 0.624 blue: 0 alpha: 1];

}

#pragma mark Colors

+ (UIColor*)accessBlue { return _accessBlue; }
+ (UIColor*)brushDefault { return _brushDefault; }

#pragma mark Drawing Methods

+ (void)drawBackButtonWithFrame: (CGRect)frame
{
    //// Color Declarations
    UIColor* color0 = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 1];


    //// Subframes
    CGRect left = CGRectMake(CGRectGetMinX(frame) + 18.26, CGRectGetMinY(frame) + 8, CGRectGetWidth(frame) - 37, CGRectGetHeight(frame) - 16);


    //// Captions
    {
    }


    //// Plus
    {
    }


    //// Minus
    {
    }


    //// Right
    {
    }


    //// Left
    {
        //// Oval 2 Drawing
        UIBezierPath* oval2Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(CGRectGetMinX(left) + floor(CGRectGetWidth(left) * 0.00000 + 0.5), CGRectGetMinY(left) + floor(CGRectGetHeight(left) * 0.00000 + 0.5), floor(CGRectGetWidth(left) * 1.00000 + 0.5) - floor(CGRectGetWidth(left) * 0.00000 + 0.5), floor(CGRectGetHeight(left) * 1.00000 + 0.5) - floor(CGRectGetHeight(left) * 0.00000 + 0.5))];
        [color0 setStroke];
        oval2Path.lineWidth = 6;
        [oval2Path stroke];


        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
        [bezier2Path moveToPoint: CGPointMake(CGRectGetMinX(left) + 0.80851 * CGRectGetWidth(left), CGRectGetMinY(left) + 0.53191 * CGRectGetHeight(left))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(left) + 0.30851 * CGRectGetWidth(left), CGRectGetMinY(left) + 0.53191 * CGRectGetHeight(left))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(left) + 0.45745 * CGRectGetWidth(left), CGRectGetMinY(left) + 0.68085 * CGRectGetHeight(left))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(left) + 0.37234 * CGRectGetWidth(left), CGRectGetMinY(left) + 0.68085 * CGRectGetHeight(left))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(left) + 0.19149 * CGRectGetWidth(left), CGRectGetMinY(left) + 0.50000 * CGRectGetHeight(left))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(left) + 0.37234 * CGRectGetWidth(left), CGRectGetMinY(left) + 0.31915 * CGRectGetHeight(left))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(left) + 0.45745 * CGRectGetWidth(left), CGRectGetMinY(left) + 0.31915 * CGRectGetHeight(left))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(left) + 0.30851 * CGRectGetWidth(left), CGRectGetMinY(left) + 0.46809 * CGRectGetHeight(left))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(left) + 0.80851 * CGRectGetWidth(left), CGRectGetMinY(left) + 0.46809 * CGRectGetHeight(left))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(left) + 0.80851 * CGRectGetWidth(left), CGRectGetMinY(left) + 0.53191 * CGRectGetHeight(left))];
        [bezier2Path closePath];
        bezier2Path.miterLimit = 4;

        [UIColor.redColor setStroke];
        bezier2Path.lineWidth = 5.5;
        [bezier2Path stroke];
    }


    //// Up
    {
    }


    //// Down
    {
    }


    //// Play
    {
    }


    //// Forward
    {
    }


    //// Reverse
    {
    }


    //// Stop
    {
    }


    //// Pause_1_
    {
    }


    //// Record
    {
    }


    //// Close
    {
    }


    //// Check
    {
    }


    //// Power
    {
    }


    //// Skip_Forward
    {
    }


    //// Skip_Backward
    {
    }


    //// Cancel
    {
    }


    //// Info
    {
    }


    //// Help
    {
    }
}

+ (void)drawCreateButtonWithFrame: (CGRect)frame
{
    //// Color Declarations
    UIColor* color0 = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 1];
    UIColor* color2 = [UIColor colorWithRed: 0.12 green: 0.562 blue: 0.192 alpha: 1];


    //// Subframes
    CGRect your_Icon = CGRectMake(CGRectGetMinX(frame) + 15, CGRectGetMinY(frame) + 9.43, CGRectGetWidth(frame) - 30.9, CGRectGetHeight(frame) - 19);


    //// Captions
    {
    }


    //// Your_Icon
    {
        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
        [bezier2Path moveToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.00000 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 1.00000 * CGRectGetHeight(your_Icon))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 1.00000 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 1.00000 * CGRectGetHeight(your_Icon))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 1.00000 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.10000 * CGRectGetHeight(your_Icon))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.54546 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.10000 * CGRectGetHeight(your_Icon))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.54546 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.18765 * CGRectGetHeight(your_Icon))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.92030 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.18765 * CGRectGetHeight(your_Icon))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.92030 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.91233 * CGRectGetHeight(your_Icon))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.07970 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.91233 * CGRectGetHeight(your_Icon))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.07970 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.60001 * CGRectGetHeight(your_Icon))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.00000 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.60001 * CGRectGetHeight(your_Icon))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.00000 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 1.00000 * CGRectGetHeight(your_Icon))];
        [bezier2Path closePath];
        bezier2Path.miterLimit = 4;

        [color0 setFill];
        [bezier2Path fill];


        //// Bezier 4 Drawing
        UIBezierPath* bezier4Path = UIBezierPath.bezierPath;
        [bezier4Path moveToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.78563 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.35590 * CGRectGetHeight(your_Icon))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.46014 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.35590 * CGRectGetHeight(your_Icon))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.46014 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.00000 * CGRectGetHeight(your_Icon))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.32547 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.00000 * CGRectGetHeight(your_Icon))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.32547 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.35590 * CGRectGetHeight(your_Icon))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.00002 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.35590 * CGRectGetHeight(your_Icon))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.00002 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.50297 * CGRectGetHeight(your_Icon))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.32547 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.50297 * CGRectGetHeight(your_Icon))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.32547 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.85889 * CGRectGetHeight(your_Icon))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.46014 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.85889 * CGRectGetHeight(your_Icon))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.46014 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.50297 * CGRectGetHeight(your_Icon))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.78563 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.50297 * CGRectGetHeight(your_Icon))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(your_Icon) + 0.78563 * CGRectGetWidth(your_Icon), CGRectGetMinY(your_Icon) + 0.35590 * CGRectGetHeight(your_Icon))];
        [bezier4Path closePath];
        bezier4Path.miterLimit = 4;

        [color2 setFill];
        [bezier4Path fill];
    }
}

+ (void)drawSearchButtonWithFrame: (CGRect)frame
{
    //// General Declarations
    CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Color Declarations
    UIColor* color = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 1];
    UIColor* gradientColor = [UIColor colorWithRed: 0.62 green: 0.455 blue: 0.251 alpha: 1];

    //// Gradient Declarations
    CGFloat gradientLocations[] = {0, 0.14, 0.39, 0.39, 0.41};
    CGGradientRef gradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)gradientColor.CGColor, (id)gradientColor.CGColor, (id)gradientColor.CGColor, (id)[gradientColor blendedColorWithFraction: 0.5 ofColor: color].CGColor, (id)color.CGColor], gradientLocations);


    //// Subframes
    CGRect group = CGRectMake(CGRectGetMinX(frame) + 19, CGRectGetMinY(frame) + 8, CGRectGetWidth(frame) - 37, CGRectGetHeight(frame) - 19);


    //// Group
    {
        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
        [bezier2Path moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.00664 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.89223 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.31948 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.57884 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.25703 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.37213 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.27885 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.51816 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.25703 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.44682 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.36583 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.10899 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.25703 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.27273 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.29566 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.17928 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.62851 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00000 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.43600 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.03871 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.52928 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00000 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.89120 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.10899 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.72774 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00000 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.82103 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.03871 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 1.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.37213 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.96136 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.17928 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 1.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.27273 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.89119 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.63525 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 1.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.47152 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.96136 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.56496 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.62850 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.74425 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.82102 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.70554 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.72774 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.74425 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.42012 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.68029 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.55309 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.74425 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.48113 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.72187 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.10758 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.99336 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.06426 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.98824 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.09703 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00393 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.07763 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00163 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.01174 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.93563 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.00664 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.89223 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + -0.00163 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92223 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + -0.00392 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.90280 * CGRectGetHeight(group))];
        [bezier2Path closePath];
        [bezier2Path moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.62851 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.64344 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.89937 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.37213 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.77787 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.64344 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.89937 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.52173 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.62851 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.10080 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.89937 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.22252 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.77786 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.10080 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.35766 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.37213 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.47916 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.10080 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.35766 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.22252 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.62851 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.64344 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.35766 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.52173 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.47916 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.64344 * CGRectGetHeight(group))];
        [bezier2Path closePath];
        bezier2Path.miterLimit = 4;

        CGContextSaveGState(context);
        [bezier2Path addClip];
        UIBezierPath* bezier2RotatedPath = [bezier2Path copy];
        CGAffineTransform bezier2Transform = CGAffineTransformMakeRotation(-45*(-M_PI/180));
        [bezier2RotatedPath applyTransform: bezier2Transform];
        CGRect bezier2Bounds = CGPathGetPathBoundingBox(bezier2RotatedPath.CGPath);
        bezier2Transform = CGAffineTransformInvert(bezier2Transform);

        CGContextDrawLinearGradient(context, gradient,
            CGPointApplyAffineTransform(CGPointMake(CGRectGetMinX(bezier2Bounds), CGRectGetMidY(bezier2Bounds)), bezier2Transform),
            CGPointApplyAffineTransform(CGPointMake(CGRectGetMaxX(bezier2Bounds), CGRectGetMidY(bezier2Bounds)), bezier2Transform),
            0);
        CGContextRestoreGState(context);
    }


    //// Cleanup
    CGGradientRelease(gradient);
    CGColorSpaceRelease(colorSpace);
}

+ (void)drawBrushButtonWithFrame: (CGRect)frame brushColor: (UIColor*)brushColor
{
    //// Color Declarations
    UIColor* color3 = [UIColor colorWithRed: 0.005 green: 0.005 blue: 0.005 alpha: 1];


    //// Subframes
    CGRect group = CGRectMake(CGRectGetMinX(frame) + 11.81, CGRectGetMinY(frame) + 8.1, CGRectGetWidth(frame) - 22.63, CGRectGetHeight(frame) - 17.71);


    //// Group
    {
        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
        [bezier2Path moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.46151 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.85098 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.41697 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.63696 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.49981 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.77756 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.47977 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.68175 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.23383 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.68860 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.35405 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.59208 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.27213 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.61518 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.23370 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.68885 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.83739 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.18246 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.78705 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.09199 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.84001 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.00024 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.83810 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.09522 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.95426 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.02188 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.88433 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.05387 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92477 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.46151 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.85098 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.22096 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.04394 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.38496 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.99770 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.46151 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.85098 * CGRectGetHeight(group))];
        [bezier2Path closePath];
        bezier2Path.miterLimit = 4;

        [brushColor setFill];
        [bezier2Path fill];


        //// Bezier 4 Drawing
        UIBezierPath* bezier4Path = UIBezierPath.bezierPath;
        [bezier4Path moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.97636 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.02435 * CGRectGetHeight(group))];
        [bezier4Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.84030 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06424 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.93246 * CGRectGetWidth(group), CGRectGetMinY(group) + -0.02768 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.88420 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.01220 * CGRectGetHeight(group))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.41538 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.56794 * CGRectGetHeight(group))];
        [bezier4Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.52860 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.68996 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.49286 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.59252 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.50797 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.59799 * CGRectGetHeight(group))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.95352 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.18614 * CGRectGetHeight(group))];
        [bezier4Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.97636 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.02435 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.99742 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.13409 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 1.02026 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.07639 * CGRectGetHeight(group))];
        [bezier4Path closePath];
        bezier4Path.miterLimit = 4;

        [color3 setFill];
        [bezier4Path fill];
    }
}

+ (void)drawSaveButtonWithFrame: (CGRect)frame
{
    //// Color Declarations
    UIColor* color4 = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 1];
    UIColor* color5 = [UIColor colorWithRed: 0.205 green: 0.294 blue: 0.67 alpha: 1];


    //// Subframes
    CGRect group = CGRectMake(CGRectGetMinX(frame) + 19, CGRectGetMinY(frame) + 9.23, CGRectGetWidth(frame) - 37.3, CGRectGetHeight(frame) - 18.23);


    //// Group
    {
        //// Guts Drawing
        UIBezierPath* gutsPath = UIBezierPath.bezierPath;
        [gutsPath moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.96678 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.20201 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.78601 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.01877 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.76922 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.01223 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.78213 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.01485 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.77568 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.01223 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.69949 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.01223 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.29792 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.01223 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.08745 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.01223 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.02418 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.07636 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.05259 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.01223 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.02418 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.04102 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.02418 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.91141 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.08745 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.97554 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.02418 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.94675 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.05259 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.97554 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.22174 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.97554 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.79504 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.97554 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.91255 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.97554 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.97582 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.91141 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.94741 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.97554 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.97582 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.94675 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.97582 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.21903 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.96678 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.20201 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.97452 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.21379 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.97194 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.20725 * CGRectGetHeight(group))];
        [gutsPath closePath];
        [gutsPath moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.66416 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.66416 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.26308 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.67496 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.26439 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.66416 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.26439 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.67496 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.26439 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.59702 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.26439 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.59702 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.66416 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [gutsPath closePath];
        [gutsPath moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.53586 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.53586 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.26439 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.33584 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.26439 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.33455 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.26308 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.33455 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.26439 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.33455 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.26308 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.33455 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.53586 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [gutsPath closePath];
        [gutsPath moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.25708 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.25708 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.62739 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.34570 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.53753 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.25708 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.57111 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.29018 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.53753 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.66980 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.53753 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.75842 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.62739 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.72532 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.53753 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.75842 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.57111 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.75842 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.25708 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group))];
        [gutsPath closePath];
        [gutsPath moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.92675 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.91141 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.91125 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.92675 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.91926 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.92029 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.81829 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.81829 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.62739 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.66980 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.47687 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.81829 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.54493 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.75114 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.47687 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.34699 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.47687 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.19850 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.62739 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.26564 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.47687 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.19850 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.54493 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.19850 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.08745 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.07196 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.91141 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.07971 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.07196 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92057 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.07196 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.07636 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.08745 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.07196 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06851 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.07842 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.27468 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.27468 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.26308 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.33584 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.32504 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.27468 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.29056 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.30872 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.32504 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.66287 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.32504 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.72403 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.26308 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.68998 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.32504 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.72403 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.29056 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.72403 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.76018 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.92675 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.22950 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.92675 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.91141 * CGRectGetHeight(group))];
        [gutsPath closePath];
        [gutsPath moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.68142 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.78445 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.65817 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.82024 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.68142 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.79754 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.67109 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.82024 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.36248 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.82024 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.33924 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.78445 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.34957 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.82024 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.33924 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.79754 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.36248 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.74866 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.33924 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.77136 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.34957 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.74866 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.65688 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.74866 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.68142 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.78445 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.67109 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.74866 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.68142 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.77136 * CGRectGetHeight(group))];
        [gutsPath closePath];
        [gutsPath moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.68142 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.65880 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.65817 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.69459 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.68142 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.67189 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.67109 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.69459 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.36248 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.69459 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.33924 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.65880 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.34957 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.69459 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.33924 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.67189 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.36248 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.62301 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.33924 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.64571 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.34957 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.62301 * CGRectGetHeight(group))];
        [gutsPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.65688 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.62301 * CGRectGetHeight(group))];
        [gutsPath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.68142 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.65880 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.67109 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.62170 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.68142 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.64440 * CGRectGetHeight(group))];
        [gutsPath closePath];
        gutsPath.miterLimit = 4;

        [color5 setFill];
        [gutsPath fill];


        //// Outline Drawing
        UIBezierPath* outlinePath = UIBezierPath.bezierPath;
        [outlinePath moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.99096 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.20201 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.78601 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00654 * CGRectGetHeight(group))];
        [outlinePath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.76922 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00000 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.78213 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00262 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.77568 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00000 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.69949 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00000 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.29792 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00000 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.08745 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00000 * CGRectGetHeight(group))];
        [outlinePath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.07636 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.05259 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00000 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.04102 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.91141 * CGRectGetHeight(group))];
        [outlinePath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.08745 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.94675 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.05259 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.22174 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.79504 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.91255 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group))];
        [outlinePath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 1.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.91141 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.94741 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 1.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.94675 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 1.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.21903 * CGRectGetHeight(group))];
        [outlinePath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.99096 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.20201 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.99871 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.21379 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.99613 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.20725 * CGRectGetHeight(group))];
        [outlinePath closePath];
        [outlinePath moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.67625 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.60911 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.67625 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [outlinePath closePath];
        [outlinePath moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.56004 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.32246 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.56004 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [outlinePath closePath];
        [outlinePath moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.24498 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.77051 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.24498 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group))];
        [outlinePath closePath];
        [outlinePath moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.92675 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.91141 * CGRectGetHeight(group))];
        [outlinePath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.91125 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.92675 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.91926 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.92029 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.81829 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.19850 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.08745 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group))];
        [outlinePath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.07196 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.91141 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.07971 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92711 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.07196 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.92057 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.07196 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.07636 * CGRectGetHeight(group))];
        [outlinePath addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.08745 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.07196 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06851 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.07842 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.27468 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.72403 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.76018 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06066 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.92675 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.22950 * CGRectGetHeight(group))];
        [outlinePath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.92675 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.91141 * CGRectGetHeight(group))];
        [outlinePath closePath];
        outlinePath.miterLimit = 4;

        [color4 setFill];
        [outlinePath fill];
    }
}

#pragma mark Generated Images

+ (UIImage*)imageOfBackButtonWithFrame: (CGRect)frame
{
    UIGraphicsBeginImageContextWithOptions(frame.size, NO, 0.0f);
    [AccessLectureKit drawBackButtonWithFrame: frame];

    UIImage* imageOfBackButton = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return imageOfBackButton;
}

@end



@implementation UIColor (PaintCodeAdditions)

- (UIColor*)blendedColorWithFraction: (CGFloat)fraction ofColor: (UIColor*)color2
{
    UIColor* color1 = self;

    CGFloat r1 = 0, g1 = 0, b1 = 0, a1 = 0;
    CGFloat r2 = 0, g2 = 0, b2 = 0, a2 = 0;


    [color1 getRed: &r1 green: &g1 blue: &b1 alpha: &a1];
    [color2 getRed: &r2 green: &g2 blue: &b2 alpha: &a2];

    CGFloat r = r1 * (1 - fraction) + r2 * fraction;
    CGFloat g = g1 * (1 - fraction) + g2 * fraction;
    CGFloat b = b1 * (1 - fraction) + b2 * fraction;
    CGFloat a = a1 * (1 - fraction) + a2 * fraction;

    return [UIColor colorWithRed: r green: g blue: b alpha: a];
}

@end
